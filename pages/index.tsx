import type { NextPage } from "next";
import Head from "next/head";
import { yupResolver } from "@hookform/resolvers/yup";
import Image from "next/image";
import {
  useForm,
  SubmitHandler,
  Controller,
  FormProvider,
} from "react-hook-form";
import styles from "../styles/Home.module.css";
import * as yup from "yup";
import { TextField } from "@mui/material";
import Subcomponent1 from "../src/components/Subcomponent1";
import SubComponent2 from "../src/components/SubComponent2";
import { FC } from "react";

interface IFormInputs {
  email: string;
  password: string;
  firstName: string;
  lastName: string;
}

const schema = yup.object().shape({
  email: yup.string().email().required(),
  password: yup.string().min(4).max(20).required(),
  firstName: yup.string().required(),
  lastName: yup.string().required(),
});

const Home: FC = () => {
  // const {
  //   register,
  //   control,
  //   handleSubmit,
  //   watch,
  //   formState: { errors },
  // } = useForm<IFormInputs>({
  //   resolver: yupResolver(schema),
  // });
  const methods = useForm<IFormInputs>({
    resolver: yupResolver(schema),
  });

  // console.log("errors", errors);
  const formSubmitHandler: SubmitHandler<IFormInputs> = (data: IFormInputs) => {
    console.log("form data is", data);
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Form Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <FormProvider {...methods}>
          <form onSubmit={methods.handleSubmit(formSubmitHandler)}>
            <Subcomponent1 />
            <br />
            <br />
            <SubComponent2 />
            <br />
            <input type="submit" />
          </form>
        </FormProvider>
      </main>
    </div>
  );
};

export default Home;
